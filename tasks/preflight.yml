---
- name: Naive assertion of proper listen address
  assert:
    that:
      - "':' in 389ds_exporter_web_listen_address"

- name: Fail on unsupported init systems
  fail:
    msg: "This module only works with systemd"
  when: ansible_service_mgr != 'systemd'

- block:
    - name: Get latest release
      uri:
        url: "https://api.github.com/repos/terrycain/389ds_exporter/releases/latest"
        method: GET
        return_content: true
        status_code: 200
        body_format: json
        validate_certs: false
        user: "{{ lookup('env', 'GH_USER') | default(omit) }}"
        password: "{{ lookup('env', 'GH_TOKEN') | default(omit) }}"
      no_log: true
      register: _latest_release
      until: _latest_release.status == 200
      retries: 5

    - name: "Set 389ds_exporter version to {{ _latest_release.json.tag_name[1:] }}"
      set_fact:
        389ds_exporter_version: "{{ _latest_release.json.tag_name[1:] }}"
  when: 389ds_exporter_version == "latest"

#- name: "Get checksum for {{ go_arch_map[ansible_architecture] | default(ansible_architecture) }} architecture"
#  set_fact:
#    389ds_exporter_checksum: "{{ item.split(' ')[0] }}"
#  with_items:
#    - "{{ lookup('url', 'https://github.com/peimanja/389ds_exporter/releases/download/v' + 389ds_exporter_version + '/sha256sums.txt', wantlist=True) | list }}"
#  when: "('linux-' + (go_arch_map[ansible_architecture] | default(ansible_architecture)) + '.tar.gz') in item"

- name: Get systemd version
  shell: systemctl --version | awk '$1 == "systemd" {print $2}'
  changed_when: false
  check_mode: false
  register: 389ds_exporter_systemd_version
  tags:
    - skip_ansible_lint
